-- ===================================================================
-- UPDATE ETAPA TERMINOLOGY - Atualizar terminologia para "Etapa da Liga√ß√£o"
-- ===================================================================

-- 1. Atualizar coment√°rios das fun√ß√µes para usar "etapa" ao inv√©s de "call_type"
COMMENT ON FUNCTION get_real_call_types() IS 'Retorna etapas √∫nicas da coluna call_type da tabela calls';
COMMENT ON FUNCTION get_scorecard_by_call_type(TEXT) IS 'Busca scorecard ativo para uma etapa espec√≠fica da liga√ß√£o';
COMMENT ON TABLE scorecard_call_type_mapping IS 'Mapeamento entre scorecards e etapas da liga√ß√£o';

-- 2. Atualizar descri√ß√£o da coluna call_type
COMMENT ON COLUMN calls.call_type IS 'Etapa da liga√ß√£o (diagnostico, proposta, ligacao, etc.)';

-- 3. Verificar etapas existentes na base de dados
SELECT 
    call_type as etapa,
    COUNT(*) as quantidade_chamadas,
    CASE 
        WHEN call_type = 'diagnostico' THEN 'üîç Diagn√≥stico'
        WHEN call_type = 'proposta' THEN 'üíº Proposta'
        WHEN call_type = 'ligacao' THEN 'üìû Liga√ß√£o'
        ELSE call_type
    END as etapa_formatada
FROM calls 
WHERE call_type IS NOT NULL 
GROUP BY call_type 
ORDER BY quantidade_chamadas DESC;

-- 4. Fun√ß√£o para formatar nome da etapa
CREATE OR REPLACE FUNCTION format_etapa_name(etapa_name TEXT)
RETURNS TEXT
LANGUAGE SQL
IMMUTABLE
AS $$
    SELECT CASE 
        WHEN etapa_name = 'diagnostico' THEN 'üîç Diagn√≥stico'
        WHEN etapa_name = 'proposta' THEN 'üíº Proposta'
        WHEN etapa_name = 'ligacao' THEN 'üìû Liga√ß√£o'
        ELSE COALESCE(etapa_name, '‚ùì Indefinido')
    END;
$$;

-- 5. Fun√ß√£o melhorada para obter etapas com formata√ß√£o
CREATE OR REPLACE FUNCTION get_etapas_formatadas()
RETURNS TABLE (
    etapa_codigo TEXT,
    etapa_nome TEXT,
    quantidade_chamadas BIGINT
)
LANGUAGE SQL
SECURITY DEFINER
AS $$
    SELECT 
        call_type as etapa_codigo,
        format_etapa_name(call_type) as etapa_nome,
        COUNT(*) as quantidade_chamadas
    FROM calls 
    WHERE call_type IS NOT NULL 
    GROUP BY call_type 
    ORDER BY quantidade_chamadas DESC;
$$;

-- 6. Atualizar fun√ß√£o de an√°lise IA para usar terminologia de etapa
COMMENT ON FUNCTION analyze_call_with_ai_scoring(UUID, TEXT, TEXT) IS 
'Analisa chamada usando IA baseada no scorecard da etapa da liga√ß√£o';

-- 7. Conceder permiss√µes
GRANT EXECUTE ON FUNCTION format_etapa_name TO authenticated;
GRANT EXECUTE ON FUNCTION get_etapas_formatadas TO authenticated;

-- 8. Verificar mapeamentos existentes
SELECT 
    s.name as scorecard_nome,
    array_agg(format_etapa_name(sctm.call_type)) as etapas_vinculadas
FROM scorecards s
LEFT JOIN scorecard_call_type_mapping sctm ON s.id = sctm.scorecard_id
WHERE s.active = true
GROUP BY s.id, s.name
ORDER BY s.name;

SELECT 'Terminologia atualizada para "Etapa da Liga√ß√£o" com sucesso!' as status;
