version: '3.9'
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: calls_mvp
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - NODE_ENV=development
      - PORT_API=8080
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - ENABLE_CRM_PUSH=${ENABLE_CRM_PUSH}
      - USE_TRANSCRIBER=${USE_TRANSCRIBER}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - STORE_AUDIO=${STORE_AUDIO}
      - RETENTION_DAYS=${RETENTION_DAYS}
      - NEXT_PUBLIC_API_BASE=http://localhost:8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - USE_TRANSCRIBER=${USE_TRANSCRIBER}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - STORE_AUDIO=${STORE_AUDIO}
      - RETENTION_DAYS=${RETENTION_DAYS}
    depends_on:
      - postgres
      - redis
      - minio

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    environment:
      - NEXT_PUBLIC_API_BASE=http://api:8080
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  pgdata: {}
  minio: {}
