-- =====================================================
-- TESTE: Verificar se ordena√ß√£o de dura√ß√£o √© global
-- =====================================================

-- 1Ô∏è‚É£ Top 20 MAIORES dura√ß√µes do sistema (p√°gina 1, offset 0)
SELECT 
    '1. P√°gina 1 (offset 0) - Top 20 MAIORES dura√ß√µes:' as teste;

SELECT 
    company_name,
    duration,
    duration_formated,
    score
FROM get_calls_with_filters(NULL, NULL, NULL, NULL, NULL, 20, 0, 'duration', NULL, NULL, NULL, NULL)
ORDER BY duration DESC;

-- 2Ô∏è‚É£ Pr√≥ximas 20 (p√°gina 2, offset 20)
SELECT 
    '2. P√°gina 2 (offset 20) - Pr√≥ximas 20:' as teste;

SELECT 
    company_name,
    duration,
    duration_formated,
    score
FROM get_calls_with_filters(NULL, NULL, NULL, NULL, NULL, 20, 20, 'duration', NULL, NULL, NULL, NULL)
ORDER BY duration DESC;

-- 3Ô∏è‚É£ Comparar: menor dura√ß√£o da p√°gina 1 vs maior dura√ß√£o da p√°gina 2
SELECT 
    '3. VALIDA√á√ÉO - P√°gina 1 MIN deve ser > P√°gina 2 MAX:' as teste;

WITH page1 AS (
    SELECT duration
    FROM get_calls_with_filters(NULL, NULL, NULL, NULL, NULL, 20, 0, 'duration', NULL, NULL, NULL, NULL)
),
page2 AS (
    SELECT duration
    FROM get_calls_with_filters(NULL, NULL, NULL, NULL, NULL, 20, 20, 'duration', NULL, NULL, NULL, NULL)
)
SELECT 
    (SELECT MIN(duration) FROM page1) as min_page1,
    (SELECT MAX(duration) FROM page2) as max_page2,
    CASE 
        WHEN (SELECT MIN(duration) FROM page1) >= (SELECT MAX(duration) FROM page2) 
        THEN '‚úÖ CORRETO! Ordena√ß√£o global funciona'
        ELSE '‚ùå ERRO! P√°gina 2 tem dura√ß√£o maior que p√°gina 1'
    END as resultado;

SELECT '
üìä INTERPRETA√á√ÉO:

‚úÖ SE "min_page1 >= max_page2":
   - Ordena√ß√£o global est√° funcionando!
   - P√°gina 1 sempre tem as MAIORES dura√ß√µes
   - Problema pode ser no frontend

‚ùå SE "min_page1 < max_page2":
   - Ordena√ß√£o N√ÉO √© global!
   - Backend est√° ordenando por p√°gina
   - Precisa corrigir SQL

' as info;

