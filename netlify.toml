[build]
  publish = "dist"
  command = "./build-netlify.sh"
  functions = "netlify/functions"
  # Force rebuild - diagnostic improvements v5 (formatting fix)

[build.environment]
  NODE_VERSION = "20.18.0"
  NPM_CONFIG_PRODUCTION = "false"
  # Otimizações de build
  CI = "true"
  NODE_OPTIONS = "--max-old-space-size=4096"
  # Force TypeScript to skip checks in production
  SKIP_PREFLIGHT_CHECK = "true"
  GENERATE_SOURCEMAP = "false"
  # Cache para acelerar builds
  NPM_CONFIG_CACHE = ".npm-cache"
  NPM_CONFIG_PREFER_OFFLINE = "true"

# Configuração do domínio customizado
[context.production]
  domain = "app.grupoggv.com"

# Headers para forçar cache bust
[[headers]]
  for = "/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

# Redirects para APIs e webhooks - DEVEM FICAR ANTES DO SPA
[[redirects]]
  from = "/api/webhook/diag-ggv-register"
  to = "/.netlify/functions/diag-ggv-register"
  status = 200
  force = true

[[redirects]]
  from = "/api/webhook/n8n-callback"
  to = "/.netlify/functions/n8n-callback"
  status = 200
  force = true

[[redirects]]
  from = "/api/diagnostic/test"
  to = "/.netlify/functions/diagnostic-test"
  status = 200
  force = true

[[redirects]]
  from = "/api/ai/stream"
  to = "/.netlify/functions/ai-stream"
  status = 200
  force = true

[[redirects]]
  from = "/api/alert"
  to = "/.netlify/functions/alert"
  status = 200
  force = true

# Feedback forward proxy
[[redirects]]
  from = "/api/feedback"
  to = "/.netlify/functions/feedback"
  status = 200
  force = true

# Error Events Admin API
[[redirects]]
  from = "/api/error-events-admin"
  to = "/.netlify/functions/error-events-admin"
  status = 200
  force = true

# Removido proxy de áudio assinado (não utilizado na versão atual)

[[redirects]]
  from = "/api/calls/analyze"
  to = "/.netlify/functions/analyze-call"
  status = 200
  force = true

# Email sending service
[[redirects]]
  from = "/api/send-email"
  to = "/.netlify/functions/send-email"
  status = 200
  force = true

# Redirects para SPA (Single Page Application) - deve ficar por último
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Headers de segurança com CSP permissivo para Google Services
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://accounts.google.com https://apis.google.com https://cdn.tailwindcss.com; connect-src 'self' https://*.supabase.co https://*.supabase.io https://accounts.google.com https://oauth2.googleapis.com https://gmail.googleapis.com https://generativelanguage.googleapis.com https://api-test.ggvinteligencia.com.br https://automation-test.ggvinteligencia.com.br wss://*.supabase.co wss://*.supabase.io; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com; img-src 'self' data: https: blob:; font-src 'self' data:; frame-src 'self' https://accounts.google.com; object-src 'none'; base-uri 'self';"

# Cache para assets estáticos
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Configuração para arquivos de ambiente
[context.production.environment]
  NODE_ENV = "production"
  VITE_APP_DOMAIN = "app.grupoggv.com"

[context.deploy-preview.environment]
  NODE_ENV = "production"

[context.branch-deploy.environment]
  NODE_ENV = "production"
