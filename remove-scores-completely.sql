-- ðŸ”§ REMOVER: Notas completamente das ligaÃ§Ãµes com falha na anÃ¡lise
-- Remove notas completamente (NULL) para nÃ£o afetar mÃ©dias

-- 1. Verificar ligaÃ§Ãµes com final_grade = -1 (anÃ¡lise falhou)
SELECT 'LigaÃ§Ãµes com final_grade = -1 (anÃ¡lise falhou):' as info;
SELECT 
    ca.id as analysis_id,
    ca.call_id,
    ca.final_grade,
    ca.general_feedback,
    ca.strengths,
    ca.improvements,
    ca.confidence,
    ca.created_at as analysis_created_at
FROM call_analysis ca
WHERE ca.final_grade = -1
ORDER BY ca.created_at DESC;

-- 2. Remover notas completamente (NULL) das ligaÃ§Ãµes com falha na anÃ¡lise
UPDATE call_analysis 
SET 
    final_grade = NULL,  -- Remover nota completamente (nÃ£o afeta mÃ©dias)
    general_feedback = 'AnÃ¡lise automÃ¡tica indisponÃ­vel. Nota removida para nÃ£o impactar mÃ©tricas.',
    updated_at = NOW()
WHERE final_grade = -1;

-- 3. Verificar quantas ligaÃ§Ãµes foram corrigidas
SELECT 'LigaÃ§Ãµes corrigidas (nota removida completamente):' as info;
SELECT 
    COUNT(*) as total_corrigidas
FROM call_analysis 
WHERE final_grade IS NULL
AND updated_at >= NOW() - INTERVAL '1 minute';

-- 4. Verificar ligaÃ§Ãµes que ainda tÃªm nota vÃ¡lida
SELECT 'LigaÃ§Ãµes que ainda tÃªm nota vÃ¡lida:' as info;
SELECT 
    ca.id as analysis_id,
    ca.call_id,
    ca.final_grade,
    ca.general_feedback,
    ca.strengths,
    ca.improvements,
    ca.confidence,
    ca.created_at as analysis_created_at
FROM call_analysis ca
WHERE ca.final_grade > 0
ORDER BY ca.created_at DESC
LIMIT 10;

-- 5. Verificar ligaÃ§Ãµes com final_grade = NULL (anÃ¡lise falhou)
SELECT 'LigaÃ§Ãµes com final_grade = NULL (anÃ¡lise falhou):' as info;
SELECT 
    ca.id as analysis_id,
    ca.call_id,
    ca.final_grade,
    ca.general_feedback,
    ca.strengths,
    ca.improvements,
    ca.confidence,
    ca.created_at as analysis_created_at
FROM call_analysis ca
WHERE ca.final_grade IS NULL
ORDER BY ca.created_at DESC
LIMIT 10;

-- 6. EstatÃ­sticas finais
SELECT 'EstatÃ­sticas finais:' as info;
SELECT 
    COUNT(CASE WHEN final_grade IS NULL THEN 1 END) as analises_falharam,
    COUNT(CASE WHEN final_grade = 0 THEN 1 END) as analises_com_nota_zero,
    COUNT(CASE WHEN final_grade > 0 THEN 1 END) as analises_com_nota_valida,
    COUNT(*) as total_analises
FROM call_analysis;
