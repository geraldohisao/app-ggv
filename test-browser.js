// Script para testar a aplica√ß√£o no browser via Node.js
const puppeteer = require('puppeteer');

(async () => {
  let browser;
  try {
    console.log('üîç Iniciando teste do browser...');
    
    browser = await puppeteer.launch({ 
      headless: false, 
      devtools: true,
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page = await browser.newPage();
    
    // Capturar erros do console
    page.on('console', msg => {
      const type = msg.type();
      if (type === 'error' || type === 'warning') {
        console.log(`üö® CONSOLE ${type.toUpperCase()}: ${msg.text()}`);
      }
    });
    
    // Capturar erros de p√°gina
    page.on('pageerror', error => {
      console.log(`‚ùå PAGE ERROR: ${error.message}`);
    });
    
    // Capturar falhas de requisi√ß√£o
    page.on('requestfailed', request => {
      console.log(`üî¥ REQUEST FAILED: ${request.url()} - ${request.failure().errorText}`);
    });
    
    console.log('üì± Navegando para http://localhost:5173...');
    await page.goto('http://localhost:5173', { waitUntil: 'networkidle0', timeout: 30000 });
    
    console.log('‚úÖ P√°gina carregada com sucesso!');
    
    // Aguardar um pouco para ver se h√° erros
    await page.waitForTimeout(3000);
    
    // Verificar se h√° elementos na p√°gina
    const title = await page.title();
    console.log(`üìã T√≠tulo da p√°gina: ${title}`);
    
    const bodyText = await page.evaluate(() => document.body.innerText);
    if (bodyText.includes('Error') || bodyText.includes('Erro')) {
      console.log('‚ö†Ô∏è Poss√≠vel erro detectado na p√°gina:');
      console.log(bodyText.substring(0, 200) + '...');
    }
    
    // Tentar clicar no bot√£o de debug
    try {
      await page.waitForSelector('button[title*="debug"]', { timeout: 5000 });
      console.log('üêõ Bot√£o de debug encontrado!');
    } catch (e) {
      console.log('‚ö†Ô∏è Bot√£o de debug n√£o encontrado');
    }
    
    console.log('‚úÖ Teste conclu√≠do. Deixando browser aberto para inspe√ß√£o...');
    // N√£o fechar o browser para permitir inspe√ß√£o manual
    
  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.message);
    if (browser) {
      await browser.close();
    }
  }
})();
