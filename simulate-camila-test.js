// Simula√ß√£o completa do fluxo da Camila
// Teste: Login ‚Üí Verifica√ß√£o de Acesso ‚Üí Renderiza√ß√£o do Menu ‚Üí Acesso √† P√°gina

console.log('üß™ SIMULANDO FLUXO COMPLETO DA CAMILA...\n');

// 1. SIMULAR DADOS DO BANCO (resultado do nosso script SQL)
const camilaProfile = {
    id: 'camila-uuid-123',
    full_name: 'Camila Ataliba',
    email: 'camila.ataliba@grupoggv.com',
    user_function: 'Closer', // ‚Üê Confirmado pelo script SQL
    role: 'USER'
};

console.log('üìã 1. DADOS DO BANCO (profiles):');
console.log(JSON.stringify(camilaProfile, null, 2));

// 2. SIMULAR CRIA√á√ÉO DO OBJETO USER (DirectUserContext.tsx)
const camilaUser = {
    id: camilaProfile.id,
    email: camilaProfile.email,
    name: camilaProfile.full_name.split(' ').map(part => 
        part.charAt(0).toUpperCase() + part.slice(1).toLowerCase()
    ).join(' '),
    initials: camilaProfile.full_name.split(' ').map(n => n[0]).slice(0, 2).join('').toUpperCase(),
    role: camilaProfile.role,
    user_function: camilaProfile.user_function
};

console.log('\nüë§ 2. OBJETO USER CRIADO (DirectUserContext):');
console.log(JSON.stringify(camilaUser, null, 2));

// 3. SIMULAR VERIFICA√á√ÉO DE ACESSO NO MENU (UserMenu.tsx)
const canSeeFeedback_Menu = camilaUser.role === 'SUPER_ADMIN' || 
                           camilaUser.user_function === 'Closer' || 
                           camilaUser.user_function === 'Gestor';

console.log('\nüçî 3. VERIFICA√á√ÉO NO MENU (UserMenu.tsx):');
console.log(`user.role === 'SUPER_ADMIN': ${camilaUser.role === 'SUPER_ADMIN'}`);
console.log(`user.user_function === 'Closer': ${camilaUser.user_function === 'Closer'}`);
console.log(`user.user_function === 'Gestor': ${camilaUser.user_function === 'Gestor'}`);
console.log(`canSeeFeedback: ${canSeeFeedback_Menu}`);
console.log(`MENU ITEM VIS√çVEL: ${canSeeFeedback_Menu ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);

// 4. SIMULAR VERIFICA√á√ÉO DE ACESSO NA P√ÅGINA (OpportunityFeedbackPage.tsx)
const hasAccess_Page = (() => {
    if (!camilaUser) return false;
    
    // SuperAdmin sempre tem acesso
    if (camilaUser.role === 'SUPER_ADMIN') return true;
    
    // Verificar fun√ß√£o comercial - apenas Closer e Gestor
    return camilaUser.user_function === 'Closer' || camilaUser.user_function === 'Gestor';
})();

console.log('\nüìÑ 4. VERIFICA√á√ÉO NA P√ÅGINA (OpportunityFeedbackPage.tsx):');
console.log(`hasAccess l√≥gica:`);
console.log(`  if (!user) return false: ${!camilaUser ? 'TRUE (retorna false)' : 'FALSE (continua)'}`);
console.log(`  if (user.role === 'SUPER_ADMIN') return true: ${camilaUser.role === 'SUPER_ADMIN' ? 'TRUE (retorna true)' : 'FALSE (continua)'}`);
console.log(`  return user.user_function === 'Closer' || user.user_function === 'Gestor':`);
console.log(`    user.user_function === 'Closer': ${camilaUser.user_function === 'Closer'}`);
console.log(`    user.user_function === 'Gestor': ${camilaUser.user_function === 'Gestor'}`);
console.log(`  RESULTADO: ${hasAccess_Page}`);
console.log(`P√ÅGINA ACESS√çVEL: ${hasAccess_Page ? '‚úÖ SIM' : '‚ùå N√ÉO (mostra AccessDenied)'}`);

// 5. SIMULAR ROTEAMENTO
console.log('\nüõ£Ô∏è  5. TESTE DE ROTEAMENTO:');
const testUrls = [
    '/feedback',
    '/feedback?deal_id=632951',
    '/opportunity-feedback',
    '/opportunity-feedback?deal_id=632951'
];

testUrls.forEach(url => {
    // Simular getModuleFromPath (router.ts)
    const moduleRoutes = {
        '/': 'Diagnostico',
        '/diagnostico-comercial': 'Diagnostico',
        '/assistente': 'Assistente',
        '/calculadora': 'Calculadora',
        '/chamadas': 'Calls',
        '/configuracoes': 'Settings',
        '/feedback': 'OpportunityFeedback', // ‚Üê Rota correta
        '/reativacao': 'ReativacaoLeads'
    };
    
    const pathname = url.split('?')[0]; // Remove query params
    const module = moduleRoutes[pathname];
    
    console.log(`  ${url} ‚Üí M√≥dulo: ${module || 'N√ÉO ENCONTRADO'} ${module === 'OpportunityFeedback' ? '‚úÖ' : '‚ùå'}`);
});

// 6. SIMULAR RENDERIZA√á√ÉO FINAL
console.log('\nüé® 6. RESULTADO FINAL DA RENDERIZA√á√ÉO:');

if (canSeeFeedback_Menu && hasAccess_Page) {
    console.log('‚úÖ SUCESSO COMPLETO:');
    console.log('  ‚Ä¢ Menu "Feedback de Oportunidade" aparece ‚úÖ');
    console.log('  ‚Ä¢ P√°gina /feedback?deal_id=632951 carrega normalmente ‚úÖ');
    console.log('  ‚Ä¢ Componente OpportunityFeedbackPage renderiza ‚úÖ');
    console.log('  ‚Ä¢ Formul√°rio de feedback dispon√≠vel ‚úÖ');
} else if (!canSeeFeedback_Menu && hasAccess_Page) {
    console.log('‚ö†Ô∏è PROBLEMA PARCIAL:');
    console.log('  ‚Ä¢ Menu "Feedback de Oportunidade" N√ÉO aparece ‚ùå');
    console.log('  ‚Ä¢ P√°gina /feedback?deal_id=632951 funciona se acessada diretamente ‚úÖ');
} else if (canSeeFeedback_Menu && !hasAccess_Page) {
    console.log('‚ö†Ô∏è PROBLEMA PARCIAL:');
    console.log('  ‚Ä¢ Menu "Feedback de Oportunidade" aparece ‚úÖ');
    console.log('  ‚Ä¢ P√°gina /feedback?deal_id=632951 mostra "Acesso Negado" ‚ùå');
} else {
    console.log('‚ùå PROBLEMA COMPLETO:');
    console.log('  ‚Ä¢ Menu "Feedback de Oportunidade" N√ÉO aparece ‚ùå');
    console.log('  ‚Ä¢ P√°gina /feedback?deal_id=632951 mostra "Acesso Negado" ‚ùå');
}

// 7. DIAGN√ìSTICO DE POSS√çVEIS PROBLEMAS
console.log('\nüîß 7. DIAGN√ìSTICO DE POSS√çVEIS PROBLEMAS:');

if (camilaUser.user_function !== 'Closer') {
    console.log('‚ùå PROBLEMA: user_function n√£o √© "Closer"');
    console.log('   SOLU√á√ÉO: Execute o script SQL fix-camila-closer-access.sql');
} else {
    console.log('‚úÖ user_function est√° correto: "Closer"');
}

if (!canSeeFeedback_Menu) {
    console.log('‚ùå PROBLEMA: L√≥gica do menu n√£o permite acesso');
    console.log('   CAUSA: UserMenu.tsx n√£o implementado ou bug na l√≥gica');
} else {
    console.log('‚úÖ L√≥gica do menu permite acesso');
}

if (!hasAccess_Page) {
    console.log('‚ùå PROBLEMA: L√≥gica da p√°gina n√£o permite acesso');
    console.log('   CAUSA: OpportunityFeedbackPage.tsx com bug na l√≥gica');
} else {
    console.log('‚úÖ L√≥gica da p√°gina permite acesso');
}

// 8. INSTRU√á√ïES PARA TESTE REAL
console.log('\nüìù 8. INSTRU√á√ïES PARA TESTE REAL:');
console.log('1. Camila deve fazer logout/login para atualizar sess√£o');
console.log('2. Verificar se menu "Feedback de Oportunidade" aparece');
console.log('3. Testar URL: /feedback?deal_id=632951');
console.log('4. Se n√£o funcionar, usar ferramenta: /debug-camila-session.html');

console.log('\nüéØ CONCLUS√ÉO DA SIMULA√á√ÉO:');
if (canSeeFeedback_Menu && hasAccess_Page) {
    console.log('‚úÖ CAMILA DEVE TER ACESSO COMPLETO AO SISTEMA DE FEEDBACK');
    console.log('   Se n√£o estiver funcionando, o problema √© na SESS√ÉO/CACHE');
} else {
    console.log('‚ùå H√Å PROBLEMA NA L√ìGICA DE ACESSO - PRECISA CORRE√á√ÉO');
}
