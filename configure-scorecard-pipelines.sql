-- üîß CONFIGURA√á√ÉO: Definir pipelines/etapas para scorecards existentes
-- Este script configura os scorecards para usar sele√ß√£o inteligente por etapa

-- 1. Verificar scorecards existentes
SELECT 
    id,
    name,
    active,
    target_call_types,
    target_pipelines,
    target_cadences
FROM scorecards 
ORDER BY name;

-- 2. Configurar scorecard "Liga√ß√£o - Consultoria" para N√ÉO incluir "Apresenta√ß√£o de Proposta"
UPDATE scorecards 
SET 
    target_pipelines = ARRAY['Qualifica√ß√£o', 'Descoberta de Necessidades', 'Agendamento']
WHERE name = 'Liga√ß√£o - Consultoria';

-- 3. Criar/Configurar scorecard espec√≠fico para "Apresenta√ß√£o de Proposta"
-- Primeiro, verificar se j√° existe
SELECT id, name FROM scorecards WHERE name LIKE '%Apresenta√ß√£o%' OR name LIKE '%Proposta%';

-- Se n√£o existir, criar um novo scorecard para Apresenta√ß√£o de Proposta
INSERT INTO scorecards (
    name, 
    description, 
    active, 
    target_call_types, 
    target_pipelines, 
    target_cadences,
    created_at,
    updated_at
)
SELECT 
    'Apresenta√ß√£o de Proposta',
    'Scorecard espec√≠fico para chamadas na etapa de apresenta√ß√£o de proposta',
    true,
    ARRAY['consultoria', 'vendas'],
    ARRAY['Apresenta√ß√£o de Proposta', 'Proposta', 'Apresenta√ß√£o'],
    ARRAY['inbound', 'outbound'],
    NOW(),
    NOW()
WHERE NOT EXISTS (
    SELECT 1 FROM scorecards 
    WHERE name = 'Apresenta√ß√£o de Proposta'
);

-- 4. Adicionar crit√©rios espec√≠ficos para Apresenta√ß√£o de Proposta
-- (Voc√™ precisar√° configurar os crit√©rios espec√≠ficos via interface)

-- 5. Verificar configura√ß√£o final
SELECT 
    s.id,
    s.name,
    s.active,
    s.target_call_types,
    s.target_pipelines,
    s.target_cadences,
    COUNT(sc.id) as criteria_count
FROM scorecards s
LEFT JOIN scorecard_criteria sc ON s.id = sc.scorecard_id
GROUP BY s.id, s.name, s.active, s.target_call_types, s.target_pipelines, s.target_cadences
ORDER BY s.name;

-- 6. Teste da sele√ß√£o inteligente
SELECT 'Testando sele√ß√£o para etapa "Apresenta√ß√£o de Proposta":' as test_info;

SELECT 
    name,
    match_score,
    match_details
FROM debug_scorecard_selection('consultoria', 'Apresenta√ß√£o de Proposta', 'inbound');

SELECT 'Testando sele√ß√£o para etapa "Qualifica√ß√£o":' as test_info;

SELECT 
    name,
    match_score,
    match_details
FROM debug_scorecard_selection('consultoria', 'Qualifica√ß√£o', 'inbound');
